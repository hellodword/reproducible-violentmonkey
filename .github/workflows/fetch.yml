name: Check updates

on:
  push:
      branches:
        - 'master'
  workflow_dispatch:
  schedule:
    - cron: "30 0,12 * * *"

permissions:
  contents: write
  pull-requests: write

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'master'
          fetch-depth: 0

      - name: install nix
        run: |
          yes | sh <(curl -L https://nixos.org/nix/install) --no-daemon
          mkdir -p ~/.config/nix
          echo 'experimental-features = nix-command flakes' >> ~/.config/nix/nix.conf
          set +x
          echo "access-tokens = github.com=$GITHUB_ACCESS_TOKEN" >> ~/.config/nix/nix.conf
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: fetch
        run: |
          . ~/.nix-profile/etc/profile.d/nix.sh

          version_ori="$(jq -r '.version' info.json)"
          if [ -z "$version_ori" ]; then
            echo version_ori
            exit 1
          fi

          nix run .#info

          echo -e '```json\n'"$(cat info.json)"'\n```' >> $GITHUB_STEP_SUMMARY

          version_new="$(jq -r '.version' info.json)"
          if [ -z "$version_new" ]; then
            echo version_new
            exit 1
          fi

          # if [ "$(git status --porcelain | wc -l)" -ne "0" ]; then
          if [ "$version_new" != "$version_ori" ]; then
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add info.json
            git commit -m "chore: [bot] $version_ori -> $version_new"
            git checkout -b "automated/${version_ori}_to_${version_new}"
            git push -f origin "automated/${version_ori}_to_${version_new}"
            gh pr create --fill
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}